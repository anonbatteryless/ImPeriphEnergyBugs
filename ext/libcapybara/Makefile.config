# Intermittence runtime in use (e.g. CHAIN, ALPACA, TAPIR)
RUNTIME ?= TAPIR

# Port and pin for VBOOST_OK (e.g. 2.3)
LIBCAPYBARA_VBOOST_OK_PIN ?=

#Port and pin for VBANK_OK (e.g. 2.2)
LIBCAPYBARA_VBANK_OK_PIN ?=

# Port and pin for the booster enable switch ("suicide switch"), e.g. 2.3
LIBCAPYBARA_BOOST_SW_PIN ?=

# Time (ms) for waiting for Vcap to recover after droop caused by booster turn on
LIBCAPYBARA_VCAP_RECOVERY_TIME ?= 2
# Time (ms) for comparator output to settle
LIBCAPYBARA_VBANK_COMP_SETTLE_MS ?= 2

# Number of detachable capacitor banks (i.e. number of switches between banks)
LIBCAPYBARA_NUM_BANKS ?= 4

# HW design of the switch
#   NC : normally closed (ie. cap banks connected by default)
#   NO : normally open (ie. cap banks disconnected by default)
LIBCAPYBARA_SWITCH_DESIGN ?=

# HW design of the control circuit for the switch
#   TWO_PIN: design with a charge pin and discharge pin
#   ONE_PIN: design with a single pin
LIBCAPYBARA_SWITCH_CONTROL ?=


# LIBCAPYBARA_BANK_PORT_*: configure the ports connected to switches
# e.g. '2.1' indicates pin 1 of port 2
#
# NOTE: This would be simplified if we restricted the HW to use one port
# and a specific sequencing of OPEN/CLOSE pins. However, flexibility is
# desirable -- in fact, our board has switches on two different ports
# due constraints on the available pins on the MCU.

ifneq ($(LIBCAPYBARA_SWITCH_DESIGN),) # if switching functionality is enabled

ifeq ($(LIBCAPYBARA_SWITCH_CONTROL),TWO_PIN)
LIBCAPYBARA_BANK_PORT_0_OPEN  ?= 3.0
LIBCAPYBARA_BANK_PORT_0_CLOSE ?= 3.1
LIBCAPYBARA_BANK_PORT_1_OPEN  ?= 3.2
LIBCAPYBARA_BANK_PORT_1_CLOSE ?= 3.3
LIBCAPYBARA_BANK_PORT_2_OPEN  ?= 3.4
LIBCAPYBARA_BANK_PORT_2_CLOSE ?= 3.5
LIBCAPYBARA_BANK_PORT_3_OPEN  ?= 3.6
LIBCAPYBARA_BANK_PORT_3_CLOSE ?= 3.7
else ifeq ($(LIBCAPYBARA_SWITCH_CONTROL),ONE_PIN)
LIBCAPYBARA_BANK_PORT_0 ?= 3.0
LIBCAPYBARA_BANK_PORT_1 ?= 3.2
LIBCAPYBARA_BANK_PORT_2 ?= 3.4
LIBCAPYBARA_BANK_PORT_3 ?= 3.6
else # LIBCAPYBARA_SWITCH_CONTROL
$(error Invalid value of config option LIBCAPYBARA_SWITCH_CONTROL: $(LIBCAPYBARA_SWITCH_CONTROL))
endif # LIBCAPYBARA_SWITCH_CONTROL

endif # LIBCAPYBARA_SWITCH_DESIGN defined

# SW handling of post burst behavior = implicit or explicit precharge
#   EXP: do not let banks precharge after burst, reset to base_config
#   IMP: allows banks to precharge after burst w/out changing base_config
#
LIBCAPYBARA_PRECHG_HANDLING ?=

# Power availability- set to 1 for testing under continuous power, set to 0
# otherwise
LIBCAPYBARA_CONT_POWER ?=

ifeq ($(LIBCAPYBARA_FXL_OFF),1)
LOCAL_CFLAGS += -DLIBCAPYBARA_DISABLE_FXL
endif


