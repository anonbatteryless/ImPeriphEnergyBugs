#ifndef A_DENSE_H
#define A_DENSE_H

#include <libfixed/fixed.h>
#warning "including a_dense now!"

	 __nv fixed a_dense[16][16] = {
	{F_LIT(-2), F_LIT(0), F_LIT(-3), F_LIT(-3), F_LIT(0), F_LIT(0), F_LIT(0),
	 F_LIT(-2), F_LIT(-5), F_LIT(-2), F_LIT(3), F_LIT(3), F_LIT(-3), F_LIT(3),
	 F_LIT(-4), F_LIT(-5)},
	{F_LIT(0), F_LIT(4), F_LIT(0), F_LIT(-3), F_LIT(3), F_LIT(-2), F_LIT(3),
	 F_LIT(0), F_LIT(-5), F_LIT(-3), F_LIT(-5), F_LIT(-3), F_LIT(-4), F_LIT(-5),
	 F_LIT(2), F_LIT(0)},
	{F_LIT(-5), F_LIT(0), F_LIT(-5), F_LIT(-4), F_LIT(-4), F_LIT(-5), F_LIT(-2),
	 F_LIT(3), F_LIT(0), F_LIT(2), F_LIT(4), F_LIT(2), F_LIT(-5), F_LIT(0),
	 F_LIT(-4), F_LIT(-5)},
	{F_LIT(4), F_LIT(0), F_LIT(-3), F_LIT(2), F_LIT(3), F_LIT(-5), F_LIT(-3),
	 F_LIT(-3), F_LIT(0), F_LIT(-4), F_LIT(-2), F_LIT(0), F_LIT(-4), F_LIT(-3),
	 F_LIT(-4), F_LIT(0)},
	{F_LIT(0), F_LIT(3), F_LIT(3), F_LIT(-2), F_LIT(2), F_LIT(0), F_LIT(0),
	 F_LIT(3), F_LIT(-4), F_LIT(2), F_LIT(3), F_LIT(-2), F_LIT(4), F_LIT(-4),
	 F_LIT(0), F_LIT(-5)},
	{F_LIT(-4), F_LIT(0), F_LIT(0), F_LIT(-3), F_LIT(-3), F_LIT(-4), F_LIT(3),
	 F_LIT(-3), F_LIT(0), F_LIT(0), F_LIT(0), F_LIT(4), F_LIT(0), F_LIT(0),
	 F_LIT(2), F_LIT(4)},
	{F_LIT(-3), F_LIT(-5), F_LIT(0), F_LIT(2), F_LIT(0), F_LIT(2), F_LIT(0),
	 F_LIT(0), F_LIT(-4), F_LIT(4), F_LIT(-5), F_LIT(3), F_LIT(4), F_LIT(0),
	 F_LIT(-2), F_LIT(0)},
	{F_LIT(-5), F_LIT(-3), F_LIT(-3), F_LIT(-4), F_LIT(-3), F_LIT(-5), F_LIT(3),
	 F_LIT(-4), F_LIT(0), F_LIT(2), F_LIT(-3), F_LIT(0), F_LIT(0), F_LIT(-3),
	 F_LIT(0), F_LIT(2)},
	{F_LIT(0), F_LIT(-5), F_LIT(0), F_LIT(-3), F_LIT(2), F_LIT(4), F_LIT(0),
	 F_LIT(-4), F_LIT(-2), F_LIT(2), F_LIT(-4), F_LIT(0), F_LIT(-5), F_LIT(3),
	 F_LIT(0), F_LIT(-5)},
	{F_LIT(4), F_LIT(0), F_LIT(4), F_LIT(3), F_LIT(0), F_LIT(2), F_LIT(4),
	 F_LIT(0), F_LIT(0), F_LIT(3), F_LIT(-3), F_LIT(-4), F_LIT(4), F_LIT(4),
	 F_LIT(-4), F_LIT(-4)},
	{F_LIT(0), F_LIT(-4), F_LIT(3), F_LIT(-2), F_LIT(-4), F_LIT(4), F_LIT(0),
	 F_LIT(4), F_LIT(3), F_LIT(0), F_LIT(-5), F_LIT(-5), F_LIT(4), F_LIT(0),
	 F_LIT(-5), F_LIT(-2)},
	{F_LIT(-4), F_LIT(0), F_LIT(4), F_LIT(3), F_LIT(0), F_LIT(-2), F_LIT(-5),
	 F_LIT(-5), F_LIT(3), F_LIT(3), F_LIT(3), F_LIT(0), F_LIT(-5), F_LIT(-2),
	 F_LIT(0), F_LIT(0)},
	{F_LIT(-5), F_LIT(-3), F_LIT(4), F_LIT(0), F_LIT(0), F_LIT(3), F_LIT(-5),
	 F_LIT(3), F_LIT(4), F_LIT(2), F_LIT(-4), F_LIT(4), F_LIT(-5), F_LIT(3),
	 F_LIT(2), F_LIT(0)},
	{F_LIT(0), F_LIT(-2), F_LIT(-5), F_LIT(0), F_LIT(2), F_LIT(0), F_LIT(0),
	 F_LIT(-3), F_LIT(0), F_LIT(0), F_LIT(2), F_LIT(4), F_LIT(-3), F_LIT(0),
	 F_LIT(0), F_LIT(2)},
	{F_LIT(2), F_LIT(-3), F_LIT(0), F_LIT(4), F_LIT(0), F_LIT(0), F_LIT(2),
	 F_LIT(-3), F_LIT(0), F_LIT(0), F_LIT(-2), F_LIT(-2), F_LIT(-3), F_LIT(-3),
	 F_LIT(-4), F_LIT(2)},
	{F_LIT(-2), F_LIT(0), F_LIT(2), F_LIT(2), F_LIT(-3), F_LIT(-3), F_LIT(4),
	 F_LIT(3), F_LIT(0), F_LIT(0), F_LIT(0), F_LIT(0), F_LIT(0), F_LIT(4),
	 F_LIT(0), F_LIT(-3)}};

// Define this matrix if we want to test with the imaginary values initialized
// to something other than 0's
#if 0
__nv fixed a_imag_dense[16][16] = {
{F_LIT(73),F_LIT(116),F_LIT( -954),F_LIT(-486),F_LIT(-186),F_LIT(40),
F_LIT(564),F_LIT(-46),F_LIT(536),F_LIT(224),F_LIT(278),F_LIT(-682),
F_LIT(196),F_LIT( -34),F_LIT(-130),F_LIT(203)},
	/*{F_LIT(-3), F_LIT(1), F_LIT(0), F_LIT(-4), F_LIT(1), F_LIT(1), F_LIT(1),
	 F_LIT(-3), F_LIT(-6), F_LIT(-3), F_LIT(4), F_LIT(4), F_LIT(-4), F_LIT(4),
	 F_LIT(-5), F_LIT(-6)},*/
	{F_LIT(1), F_LIT(5), F_LIT(8), F_LIT(-4), F_LIT(4), F_LIT(-3), F_LIT(4),
	 F_LIT(1), F_LIT(-6), F_LIT(-4), F_LIT(-6), F_LIT(-4), F_LIT(-5), F_LIT(-6),
	 F_LIT(3), F_LIT(1)},
	{F_LIT(0), F_LIT(8), F_LIT(-9), F_LIT(-8), F_LIT(-10), F_LIT(2), F_LIT(1),
	 F_LIT(5), F_LIT(6), F_LIT(-1), F_LIT(8), F_LIT(-22), F_LIT(1), F_LIT(0),
	 F_LIT(-2), F_LIT(1)},
	{F_LIT(5), F_LIT(1), F_LIT(-8), F_LIT(3), F_LIT(4), F_LIT(-6), F_LIT(-4),
	 F_LIT(-4), F_LIT(1), F_LIT(-5), F_LIT(-3), F_LIT(1), F_LIT(-5), F_LIT(-4),
	 F_LIT(-5), F_LIT(1)},
	{F_LIT(1), F_LIT(4), F_LIT(-10), F_LIT(-3), F_LIT(3), F_LIT(1), F_LIT(1),
	 F_LIT(4), F_LIT(-5), F_LIT(3), F_LIT(4), F_LIT(-3), F_LIT(5), F_LIT(-5),
	 F_LIT(1), F_LIT(-6)},
	{F_LIT(-5), F_LIT(1), F_LIT(2), F_LIT(-4), F_LIT(-4), F_LIT(-5), F_LIT(4),
	 F_LIT(-4), F_LIT(1), F_LIT(1), F_LIT(1), F_LIT(5), F_LIT(1), F_LIT(1),
	 F_LIT(3), F_LIT(5)},
	{F_LIT(-4), F_LIT(-6), F_LIT(1), F_LIT(3), F_LIT(1), F_LIT(3), F_LIT(1),
	 F_LIT(1), F_LIT(-5), F_LIT(5), F_LIT(-6), F_LIT(4), F_LIT(5), F_LIT(1),
	 F_LIT(-3), F_LIT(1)},
	{F_LIT(-6), F_LIT(-4), F_LIT(5), F_LIT(-5), F_LIT(-4), F_LIT(-6), F_LIT(4),
	 F_LIT(-5), F_LIT(1), F_LIT(3), F_LIT(-4), F_LIT(1), F_LIT(1), F_LIT(-4),
	 F_LIT(1), F_LIT(3)},
	{F_LIT(1), F_LIT(-6), F_LIT(6), F_LIT(-4), F_LIT(3), F_LIT(5), F_LIT(1),
	 F_LIT(-5), F_LIT(-3), F_LIT(3), F_LIT(-5), F_LIT(1), F_LIT(-6), F_LIT(4),
	 F_LIT(1), F_LIT(-6)},
	{F_LIT(5), F_LIT(1), F_LIT(-1), F_LIT(4), F_LIT(1), F_LIT(3), F_LIT(5),
	 F_LIT(1), F_LIT(1), F_LIT(4), F_LIT(-4), F_LIT(-5), F_LIT(5), F_LIT(5),
	 F_LIT(-5), F_LIT(-5)},
	{F_LIT(1), F_LIT(-5), F_LIT(8), F_LIT(-3), F_LIT(-5), F_LIT(5), F_LIT(1),
	 F_LIT(5), F_LIT(4), F_LIT(1), F_LIT(-6), F_LIT(-6), F_LIT(5), F_LIT(1),
	 F_LIT(-6), F_LIT(-3)},
	{F_LIT(-5), F_LIT(1), F_LIT(-22), F_LIT(4), F_LIT(1), F_LIT(-3), F_LIT(-6),
	 F_LIT(-6), F_LIT(4), F_LIT(4), F_LIT(4), F_LIT(1), F_LIT(-6), F_LIT(-3),
	 F_LIT(1), F_LIT(1)},
	{F_LIT(-6), F_LIT(-4), F_LIT(1), F_LIT(1), F_LIT(1), F_LIT(4), F_LIT(-6),
	 F_LIT(4), F_LIT(5), F_LIT(3), F_LIT(-5), F_LIT(5), F_LIT(-6), F_LIT(4),
	 F_LIT(3), F_LIT(1)},
	{F_LIT(1), F_LIT(-3), F_LIT(0), F_LIT(1), F_LIT(3), F_LIT(1), F_LIT(1),
	 F_LIT(-4), F_LIT(1), F_LIT(1), F_LIT(3), F_LIT(5), F_LIT(-4), F_LIT(1),
	 F_LIT(1), F_LIT(3)},
	{F_LIT(3), F_LIT(-4), F_LIT(-2), F_LIT(5), F_LIT(1), F_LIT(1), F_LIT(3),
	 F_LIT(-4), F_LIT(1), F_LIT(1), F_LIT(-3), F_LIT(-3), F_LIT(-4), F_LIT(-4),
	 F_LIT(-5), F_LIT(3)},
	{F_LIT(-3), F_LIT(1), F_LIT(1), F_LIT(3), F_LIT(-4), F_LIT(-4), F_LIT(5),
	 F_LIT(4), F_LIT(1), F_LIT(1), F_LIT(1), F_LIT(1), F_LIT(1), F_LIT(5),
	 F_LIT(1), F_LIT(-4)}};
#endif

#endif

/*
	[-2, 0, -3, -3, 0, 0, 0, -2, -5, -2, 3, 3, -3, 3, -4, -5], [0, 4, 0, -3, 3,
	-2, 3, 0, -5, -3, -5, -3, -4, -5, 2, 0], [-5, 0, -5, -4, -4, -5, -2, 3, 0, 2,
	4, 2, -5, 0, -4, -5], [4, 0, -3, 2, 3, -5, -3, -3, 0, -4, -2, 0, -4, -3, -4,
	0], [0, 3, 3, -2, 2, 0, 0, 3, -4, 2, 3, -2, 4, -4, 0, -5], [-4, 0, 0, -3, -3,
	-4, 3, -3, 0, 0, 0, 4, 0, 0, 2, 4], [-3, -5, 0, 2, 0, 2, 0, 0, -4, 4, -5, 3,
	4, 0, -2, 0], [-5, -3, -3, -4, -3, -5, 3, -4, 0, 2, -3, 0, 0, -3, 0, 2], [0,
	-5, 0, -3, 2, 4, 0, -4, -2, 2, -4, 0, -5, 3, 0, -5], [4, 0, 4, 3, 0, 2, 4, 0,
	0, 3, -3, -4, 4, 4, -4, -4], [0, -4, 3, -2, -4, 4, 0, 4, 3, 0, -5, -5, 4, 0,
	-5, -2], [-4, 0, 4, 3, 0, -2, -5, -5, 3, 3, 3, 0, -5, -2, 0, 0], [-5, -3, 4,
	0, 0, 3, -5, 3, 4, 2, -4, 4, -5, 3, 2, 0], [0, -2, -5, 0, 2, 0, 0, -3, 0, 0,
	2, 4, -3, 0, 0, 2], [2, -3, 0, 4, 0, 0, 2, -3, 0, 0, -2, -2, -3, -3, -4, 2],
	[-2, 0, 2, 2, -3, -3, 4, 3, 0, 0, 0, 0, 0, 4, 0, -3]
	 */

